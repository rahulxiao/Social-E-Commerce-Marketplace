{
	"info": {
		"_postman_id": "admin-api-collection",
		"name": "Admin API Collection",
		"description": "Complete collection for testing all Admin API endpoints in the Social E-commerce Marketplace including User Category 4 requirements",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Category 4",
			"item": [
				{
					"name": "Create Admin ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Admin\",\n    \"email\": \"john.admin@example.com\",\n    \"phone\": \"1234567890\",\n    \"address\": \"123 Admin Street, City, State 12345\",\n    \"username\": \"johnadmin\",\n    \"password\": \"admin@123\",\n    \"country\": \"USA\",\n    \"dateOfBirth\": \"1990-05-15\",\n    \"socialMediaLink\": \"https://github.com/johnadmin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"create"
							]
						},
						"description": "Create admin with User Category 4 fields (joiningDate, country)"
					},
					"response": []
				},
				{
					"name": "Update Country",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"country\": \"Canada\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/updateCountry/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"updateCountry",
								"1"
							]
						},
						"description": "Modify the country of an existing admin"
					},
					"response": []
				},
				{
					"name": "Get Admins by Joining Date",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/byJoiningDate?date=2024-01-01",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"byJoiningDate"
							],
							"query": [
								{
									"key": "date",
									"value": "2024-01-01"
								}
							]
						},
						"description": "Retrieve admins by their joining date"
					},
					"response": []
				},
				{
					"name": "Get Admins with Default Country",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/defaultCountry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"defaultCountry"
							]
						},
						"description": "Retrieve admins with the default country value ('Unknown')"
					},
					"response": []
				}
			]
		},
		{
			"name": "General Operations",
			"item": [
				{
					"name": "Get All Admins",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"all"
							]
						},
						"description": "Retrieve all admins with User Category 4 fields"
					},
					"response": []
				}
			]
		},
		{
			"name": "Legacy Endpoints",
			"item": [
				{
					"name": "Get All Admins (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/getAdminInfo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"getAdminInfo"
							]
						},
						"description": "Retrieve all admin information from the database (Legacy)"
					},
					"response": []
				},
				{
					"name": "Create Admin - GitHub (Valid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\",\n    \"address\": \"123 Main Street, City, State 12345\",\n    \"username\": \"johndoe\",\n    \"password\": \"password@123\",\n    \"dateOfBirth\": \"1990-05-15\",\n    \"socialMediaLink\": \"https://github.com/johndoe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "✅ VALID: GitHub link should work (Legacy)"
					},
					"response": []
				},
				{
					"name": "Create Admin - Facebook (Valid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane.smith@example.com\",\n    \"phone\": \"9876543210\",\n    \"address\": \"456 Oak Avenue, Town, State 54321\",\n    \"username\": \"janesmith\",\n    \"password\": \"secure#456\",\n    \"dateOfBirth\": \"1985-12-25\",\n    \"socialMediaLink\": \"https://facebook.com/janesmith\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "✅ VALID: Facebook link should work (Legacy)"
					},
					"response": []
				},
				{
					"name": "Create Admin - LinkedIn (Valid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bob Wilson\",\n    \"email\": \"bob.wilson@example.com\",\n    \"phone\": \"5551234567\",\n    \"address\": \"789 Pine Street, Village, State 67890\",\n    \"username\": \"bobwilson\",\n    \"password\": \"bob$789\",\n    \"dateOfBirth\": \"1988-03-10\",\n    \"socialMediaLink\": \"https://linkedin.com/in/bobwilson\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "✅ VALID: LinkedIn link should work (Legacy)"
					},
					"response": []
				},
				{
					"name": "Create Admin - Twitter (Valid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alice Brown\",\n    \"email\": \"alice.brown@example.com\",\n    \"phone\": \"4449876543\",\n    \"address\": \"321 Elm Road, Town, State 13579\",\n    \"username\": \"alicebrown\",\n    \"password\": \"alice@456\",\n    \"dateOfBirth\": \"1992-07-22\",\n    \"socialMediaLink\": \"https://twitter.com/alicebrown\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "✅ VALID: Twitter link should work (Legacy)"
					},
					"response": []
				},
				{
					"name": "❌ Create Admin - Instagram (Invalid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"phone\": \"5555555555\",\n    \"address\": \"789 Test Road, Test City, Test State 12345\",\n    \"username\": \"testuser\",\n    \"password\": \"test@123\",\n    \"dateOfBirth\": \"1990-01-01\",\n    \"socialMediaLink\": \"https://instagram.com/testuser\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "❌ INVALID: Instagram not allowed - should return validation error (Legacy)"
					},
					"response": []
				},
				{
					"name": "❌ Create Admin - YouTube (Invalid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test2@example.com\",\n    \"phone\": \"5555555556\",\n    \"address\": \"790 Test Road, Test City, Test State 12345\",\n    \"username\": \"testuser2\",\n    \"password\": \"test@456\",\n    \"dateOfBirth\": \"1990-01-01\",\n    \"socialMediaLink\": \"https://youtube.com/channel/testuser\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "❌ INVALID: YouTube not allowed - should return validation error (Legacy)"
					},
					"response": []
				},
				{
					"name": "❌ Create Admin - TikTok (Invalid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test3@example.com\",\n    \"phone\": \"5555555557\",\n    \"address\": \"791 Test Road, Test City, Test State 12345\",\n    \"username\": \"testuser3\",\n    \"password\": \"test@789\",\n    \"dateOfBirth\": \"1990-01-01\",\n    \"socialMediaLink\": \"https://tiktok.com/@testuser\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "❌ INVALID: TikTok not allowed - should return validation error (Legacy)"
					},
					"response": []
				},
				{
					"name": "❌ Create Admin - Snapchat (Invalid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test4@example.com\",\n    \"phone\": \"5555555558\",\n    \"address\": \"792 Test Road, Test City, Test State 12345\",\n    \"username\": \"testuser4\",\n    \"password\": \"test@012\",\n    \"dateOfBirth\": \"1990-01-01\",\n    \"socialMediaLink\": \"https://snapchat.com/add/testuser\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "❌ INVALID: Snapchat not allowed - should return validation error (Legacy)"
					},
					"response": []
				},
				{
					"name": "❌ Create Admin - Pinterest (Invalid)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test5@example.com\",\n    \"phone\": \"5555555559\",\n    \"address\": \"793 Test Road, Test City, Test State 12345\",\n    \"username\": \"testuser5\",\n    \"password\": \"test@345\",\n    \"dateOfBirth\": \"1990-01-01\",\n    \"socialMediaLink\": \"https://pinterest.com/testuser\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/createAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"createAdmin"
							]
						},
						"description": "❌ INVALID: Pinterest not allowed - should return validation error (Legacy)"
					},
					"response": []
				},
				{
					"name": "Get Admin by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/getAdminById/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"getAdminById",
								"1"
							]
						},
						"description": "Retrieve admin information by ID (Legacy)"
					},
					"response": []
				},
				{
					"name": "Update Admin",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Updated\",\n    \"email\": \"john.updated@example.com\",\n    \"phone\": \"9876543210\",\n    \"address\": \"456 Updated Street, New City, State 54321\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/updateAdmin/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"updateAdmin",
								"1"
							]
						},
						"description": "Update admin information by ID (Legacy)"
					},
					"response": []
				},
				{
					"name": "Update Admin Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"newpassword$789\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/updateAdmin/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"updateAdmin",
								"1"
							]
						},
						"description": "Update admin password with special character ($) (Legacy)"
					},
					"response": []
				},
				{
					"name": "Update Admin Date of Birth",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dateOfBirth\": \"1992-08-20\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/updateAdmin/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"updateAdmin",
								"1"
							]
						},
						"description": "Update admin date of birth with valid ISO date format (Legacy)"
					},
					"response": []
				},
				{
					"name": "Update Admin Social Media",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"socialMediaLink\": \"https://facebook.com/john.doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/updateAdmin/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"updateAdmin",
								"1"
							]
						},
						"description": "Update admin social media link with Facebook URL (Legacy)"
					},
					"response": []
				},
				{
					"name": "Delete Admin by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/deleteAdminById/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"deleteAdminById",
								"1"
							]
						},
						"description": "Delete a specific admin by ID (Legacy)"
					},
					"response": []
				},
				{
					"name": "Delete All Admins",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/deleteAdmin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"deleteAdmin"
							]
						},
						"description": "Delete all admins from the database (⚠️ Use with caution) (Legacy)"
					},
					"response": []
				},
				{
					"name": "Add Admin Body (Test)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Admin\",\n    \"id\": 999\n}"
						},
						"url": {
							"raw": "{{base_url}}/admin/addAdminBody",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"addAdminBody"
							]
						},
						"description": "Test endpoint for adding admin with name and ID (Legacy)"
					},
					"response": []
				},
				{
					"name": "Get Admin by Name and ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/getAdminInfoByNameAndId?name=John Doe&id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"getAdminInfoByNameAndId"
							],
							"query": [
								{
									"key": "name",
									"value": "John Doe"
								},
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Retrieve admin information by name and ID using query parameters (Legacy)"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3333",
			"type": "string"
		}
	]
} 